package main

import (
	"github.com/nunchistudio/blacksmith"
	"github.com/nunchistudio/blacksmith/adapter/pubsub"
	"github.com/nunchistudio/blacksmith/adapter/store"
	"github.com/nunchistudio/blacksmith/adapter/wanderer"
	"github.com/nunchistudio/blacksmith/flow/destination"
	"github.com/nunchistudio/blacksmith/flow/source"
	"github.com/nunchistudio/blacksmith/service"
)

{{ if .NoComments -}} {{ else -}}
/*
Init is the entrypoint of {{ .CapitalizedName }}, a Blacksmith application.
It is used by the Blacksmith CLI to load the application as a
Go plugin.
*/
{{ end -}}

func Init() *blacksmith.Options {

	var options = &blacksmith.Options{

		Gateway: &service.Options{
			// KeyFile:  "server.key",
			// CertFile: "server.crt",
		},
		Scheduler: &service.Options{
			// KeyFile:  "server.key",
			// CertFile: "server.crt",
			Admin: &service.Admin{
				Enabled: true,
				Middleware: func(next http.Handler) http.Handler {
					return http.HandlerFunc(func(res http.ResponseWriter, req *http.Request) {
						res.Header().Set("Content-Type", "application/json")
						res.Header().Set("Access-Control-Allow-Origin", "*")

						next.ServeHTTP(res, req)
					})
				},
			},
		},

		Store: &store.Options{
			From: "postgres",
		},
		Wanderer: &wanderer.Options{
			From: "postgres",
		},

		PubSub: &pubsub.Options{
			From: "nats",
		},

		// Supervisor: &supervisor.Options{},

		Sources: []*source.Options{},

		Destinations: []*destination.Options{},
	}

	return options
}
